// Fill out your copyright notice in the Description page of Project Settings.

#pragma once

#include "NativeGameplayTags.h"

namespace WeaponTags
{
	CR4S_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Melee);
	CR4S_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Ranged);
	// Melee
	CR4S_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Chainsaw);
	CR4S_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(DemolitionGear);
	CR4S_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(ShockBat);
	CR4S_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(CrystalSword);

	// Ranged
	CR4S_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(CrystalShotgun);
	CR4S_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(CrystalRifle);
	CR4S_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(CrystalBurstRifle);
	CR4S_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(CrystalGatling);
	CR4S_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(CrystalSMG);
	CR4S_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(CrystalLauncher2);
	CR4S_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(CrystalHomingLauncher4);
	CR4S_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(CrystalHomingHighSpeed4);
	CR4S_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Fireball);
	CR4S_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(HomingFireball);
	CR4S_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(IceShotgun);
	CR4S_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(ThunderStrike);
	CR4S_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Comet);
}

namespace ToolTags
{
	CR4S_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Axe);
	CR4S_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(PickAxe);
	CR4S_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Hammer);
}

namespace OverlayMode
{
	CR4S_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Mounted);
}

namespace RobotParts
{
	CR4S_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Core);
	CR4S_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Body);
	CR4S_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Arm);
	CR4S_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Booster);
	CR4S_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Leg);
}

namespace ArmTags
{
	CR4S_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(BalanceHeavy);
	CR4S_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(MeleeLight);
	CR4S_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(RangedLight);
}

namespace BodyTags
{
	CR4S_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(BalanceLight);
	CR4S_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(HumidityLight);
	CR4S_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(TemperatureLight);
}

namespace BoosterTags
{
	CR4S_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Cyclic);
	CR4S_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(HighPower);
	CR4S_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(LongRanged);
	CR4S_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Recovery);
	CR4S_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Standard);
	CR4S_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Sustained);
}

namespace CoreTags
{
	CR4S_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Tier1);
	CR4S_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Tier2);
	CR4S_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Tier3);
	CR4S_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Tier4);
}

namespace LegTags
{
	CR4S_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(BipedalLight);
	CR4S_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(QuadrupedalLight);
	CR4S_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(ReverseBipedalLight);
}